#!/bin/sh /etc/rc.common
#
# Copyright (C) 2015 OpenWrt-dist
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=30

CONFIG=mia
[ -e /usr/sbin/nft ] && NFT=1

uci_get_by_type() {
	local index=0
	if [ -n $4 ]; then
		index=$4
	fi
	local ret=$(uci get $CONFIG.@$1[$index].$2 2>/dev/null)
	echo ${ret:=$3}
}

add_rule(){
for i in $(seq 0 100)
do
	local enable=$(uci_get_by_type macbind enable '' $i)
	local macaddr=$(uci_get_by_type macbind macaddr '' $i)
	local timeon=$(uci_get_by_type macbind timeon '' $i)
	local timeoff=$(uci_get_by_type macbind timeoff '' $i)
	local z1=$(uci_get_by_type macbind z1 '' $i)
	local z2=$(uci_get_by_type macbind z2 '' $i)
	local z3=$(uci_get_by_type macbind z3 '' $i)
	local z4=$(uci_get_by_type macbind z4 '' $i)
	local z5=$(uci_get_by_type macbind z5 '' $i)
	local z6=$(uci_get_by_type macbind z6 '' $i)
	local z7=$(uci_get_by_type macbind z7 '' $i)
        [ "$z1" == "1" ] && Z1="1"
        [ "$z2" == "1" ] && [ -z $Z1 ] && Z1="2" || Z1=${Z1}",2"
        [ "$z3" == "1" ] && [ -z $Z1 ] && Z1="3" || Z1=${Z1}",3"
        [ "$z4" == "1" ] && [ -z $Z1 ] && Z1="4" || Z1=${Z1}",4"
        [ "$z5" == "1" ] && [ -z $Z1 ] && Z1="5" || Z1=${Z1}",5"
        [ "$z6" == "1" ] && [ -z $Z1 ] && Z1="6" || Z1=${Z1}",6"
        [ "$z7" == "1" ] && [ -z $Z1 ] && Z1="0" || Z1=${Z1}",0"
	if [ -z $enable ] || [ -z $macaddr ] || [ -z $timeoff ] || [ -z $timeon ]; then
	  break
	fi
	if [ "$enable" == "1" ]; then
          nft insert rule inet fw4 MIA ether saddr $macaddr meta hour "$timeon"-"$timeoff" meta day {$Z1} counter drop
	fi
	unset "Z1"
done
}

#del_rule(){
#	type=$1
#	blackMacAdd=$(iptables -t nat -L $type | grep -w RETURN | grep -w "MAC" | awk '{print $7}')
#	[ -n "$blackMacAdd" ] && {
#		for macaddrb in $blackMacAdd
#		do
#			iptables -t nat -D $type -m mac --mac-source $macaddrb -j RETURN
#		done
#	}
#}

start(){
  stop
	enable=$(uci get mia.@basic[0].enable)
	[ $enable -eq 0 ] && exit 0
  nft add chain inet fw4 MIA
  nft insert rule inet fw4 input udp dport 53 counter jump MIA comment \"Rule for accesscontrol\"
  nft insert rule inet fw4 input tcp dport 53 counter jump MIA comment \"Rule for accesscontrol\"
  nft insert rule inet fw4 dstnat udp dport 53 counter redirect to :53 comment \"Rule for accesscontrol\"
  nft insert rule inet fw4 dstnat tcp dport 53 counter redirect to :53 comment \"Rule for accesscontrol\"
  strict=$(uci get mia.@basic[0].strict)
  [ $strict -eq 1 ] && nft insert rule inet fw4 forward counter jump MIA comment \"Rule for accesscontrol\"
  add_rule 
}
stop(){
  handles=$(nft -a list chain inet fw4 forward | grep -E "MIA" | awk -F '# handle ' '{print$2}')
  for handle in $handles; do
    nft delete rule inet fw4 forward handle ${handle} 2>/dev/null
  done
  handles=$(nft -a list chain inet fw4 input | grep -E "MIA" | awk -F '# handle ' '{print$2}')
  for handle in $handles; do
    nft delete rule inet fw4 input handle ${handle} 2>/dev/null
  done
  handles=$(nft -a list chain inet fw4 dstnat | grep -E "MIA" | awk -F '# handle ' '{print$2}')
  for handle in $handles; do
    nft delete rule inet fw4 dstnat handle ${handle} 2>/dev/null
  done
  nft flush chain inet fw4 MIA 2>/dev/null
  nft delete chain inet fw4 MIA 2>/dev/null
}
